---
processes:
- name: kube-controller-manager
  executable: /var/vcap/packages/kubernetes/bin/kube-controller-manager
  args: 
  <% 
    if_p('k8s-args') do |args|
      args.each do |flag, value|
        valueString = ""

        if value.nil?
          # Do nothing to supports args-less flags (--example)
        elsif value.is_a? Array
          valueString = "=#{value.join(",")}"
        elsif value.is_a? Hash
          valueString = "=#{value.map { |k,v| "#{k}=#{v}" }.join(",")}"
        else
          valueString = "=#{value}"
        end
  %>
  - "<%= "--#{flag}#{valueString}" %>"
  <%
      end
    end
  %>
  <%- if_link('cloud-provider') do |cloud_provider| -%>
  - --cloud-provider=<%= cloud_provider.p('cloud-provider.type') %>
  - --cloud-config=/var/vcap/jobs/kube-controller-manager/config/cloud-provider.ini
  <%- end -%>
  <%= "- --tls-cipher-suites=#{link('kube-apiserver').p('tls-cipher-suites')}" %>
  hooks:
    pre_start: /var/vcap/jobs/kube-controller-manager/bin/chmod-product-serial
  env:
    <% if_p('no_proxy') do |no_proxy| %>
    NO_PROXY: <%= no_proxy %>
    no_proxy: <%= no_proxy %>
    <% end %>
    <% if_p('https_proxy') do |https_proxy| %>
    HTTPS_PROXY: <%= https_proxy %>
    https_proxy: <%= https_proxy %>
    <% end %>
    <% if_p('http_proxy') do |http_proxy| %>
    HTTP_PROXY: <%= http_proxy %>
    http_proxy: <%= http_proxy %>
    <% end %>
    <% if_link('cloud-provider') do |cloud_provider| %>
    <% cloud_provider.if_p('cloud-provider.gce.service_key') do |service_key| %>
    GOOGLE_APPLICATION_CREDENTIALS: /var/vcap/jobs/kube-controller-manager/config/service_key.json
    <% end %>
    <% cloud_provider.if_p('cloud-provider.aws.access_key_id') do |access_key_id| %>
    AWS_ACCESS_KEY_ID: <%= access_key_id %>
    <% end %>
    <% cloud_provider.if_p('cloud-provider.aws.secret_access_key') do |secret_access_key| %>
    AWS_SECRET_ACCESS_KEY: <%= secret_access_key %>
    <% end %>
    <% end %>
<%
  ######################################################################################################
  # PLEASE KEEP THIS IN SYNC WITH KUBE-APISERVER, KUBE-CONTROLLER-MANAGER, KUBE-SCHEDULER, AND KUBELET #
  ######################################################################################################
  def validateK8sArgs()
    if_p('k8s-args') do
      if p('k8s-args').key?('tls-cipher-suites')
        raise "Do not set tls-cipher-suites in k8s-args. 'tls-cipher-suites' is set by default and cannot be changed."
      end
    end
  end

  validateK8sArgs()
  ############
  # END SYNC #
  ############
%>
