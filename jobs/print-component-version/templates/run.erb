#!/bin/bash

set -euo pipefail

cd /var/vcap/jobs/print-component-version/packages

# cifs-utils/mount.cifs must run as root, which is fine for an errand
MOUNT_CIFS_VERSION="$(cifs-utils/mount.cifs -V)"

pushd conntrack > /dev/null
  LIBNETFILTER_VERSION="$(dpkg -f libnetfilter*.deb Version)"
  CONNTRACK_VERSION="$(dpkg -f conntrack*.deb Version)"
  LIBMLN0_VERSION="$(dpkg -f libmnl0*.deb Version)"
popd > /dev/null

pushd cni/bin > /dev/null
  NSENTER_VERSION="$(./nsenter -V)"
  declare -a CNI_BINARIES=("bridge" "flannel" "host-local" "loopback" "ptp" "tuning" "dhcp" "host-device" "ipvlan" "macvlan" "portmap" "sample" "vlan")

  # sadly, these binaries (besides 'nsenter') do NOT have the release's version number burned in to them,
  # so we report a version that was previously extracted from the tarball name

  CNI_RELEASE_VERSION=$(cat BOSHCYCLE_CNI_RELEASE_VERSION)
popd > /dev/null

pushd etcdctl > /dev/null
  # somehow combining the ./etcdctl and head in same line creates 141 error, so keep separate
  ETCDCTL_VERSION="$(./etcdctl -v)"
  ETCDCTL_VERSION="$(echo "$ETCDCTL_VERSION" | head -n 1)"
popd > /dev/null

pushd flanneld > /dev/null
  # flanneld directs version output to stderr, so redirect it
  # https://github.com/coreos/flannel/blob/master/main.go#L185
  FLANNELD_VERSION="$(./flanneld -version 2>&1)"
popd > /dev/null

pushd golang-1.12-linux > /dev/null
  GOLANG_VERSION="$(./bin/go version)"
popd > /dev/null

pushd ipset > /dev/null
  LIBIPSET_VERSION="$(dpkg -f libipset*.deb Version)"
  IPSET_VERSION="$(dpkg -f ipset*.deb Version)"
popd > /dev/null

pushd jq > /dev/null
  JQ_VERSION="$(./bin/jq --version)"
popd > /dev/null

pushd nfs > /dev/null
  KEYUTILS_VERSION="$(dpkg -f keyutils*.deb Version)"
  LIBEVENT_VERSION="$(dpkg -f libevent*.deb Version)"
  LIBNFSIDMAP_VERSION="$(dpkg -f libnfsidmap*.deb Version)"
  NFS_COMMON_VERSION="$(dpkg -f nfs-common*.deb Version)"
  RPCBIND_VERSION="$(dpkg -f rpcbind*.deb Version)"
popd > /dev/null

pushd socat > /dev/null
  # the version output includes a lot of useless info, so trim to suit
  SOCAT_VERSION="$(./bin/socat -V | head -n 2 | tail -n 1)"
popd > /dev/null


cat <<EOF
---
packages:
- name: "cifs-utils"
  components:
  - "marketing_name": "mount.cifs"
    "marketing_version": "$MOUNT_CIFS_VERSION"
- name: "conntrack"
  components:
  - "marketing_name": "conntrack"
    "marketing_version": "$CONNTRACK_VERSION"
  - "marketing_name": "libnetfilter"
    "marketing_version": "$LIBNETFILTER_VERSION"
  - "marketing_name": "libmln0"
    "marketing_version": "$LIBMLN0_VERSION"
- name: "cni"
  components:
  - "marketing_name": "nsenter"
    "marketing_version": "$NSENTER_VERSION"
EOF

# Print out values for CNI binaries besides 'nsenter'
  for binaryName in "${CNI_BINARIES[@]}"; do
    echo "  - \"marketing_name\": \"$binaryName\""
    echo "    \"marketing_version\": \"${CNI_RELEASE_VERSION}\""
  done

cat <<EOF
- name: "etcdctl"
  components:
  - "marketing_name": "etcdctl"
    "marketing_version": "$ETCDCTL_VERSION"
- name: "flanneld"
  components:
  - "marketing_name": "flanneld"
    "marketing_version": "$FLANNELD_VERSION"
- name: "golang"
  components:
  - "marketing_name": "golang"
    "marketing_version": "$GOLANG_VERSION"
- name: "ipset"
  components:
  - "marketing_name": "ipset"
    "marketing_version": "$IPSET_VERSION"
  - "marketing_name": "libipset"
    "marketing_version": "$LIBIPSET_VERSION"
- name: "jq"
  components:
  - "marketing_name": "jq"
    "marketing_version": "$JQ_VERSION"
- name: "kubernetes"
  components:
  - "marketing_name": "kube-apiserver"
    "marketing_version": "$(./kubernetes/bin/kube-apiserver --version)"
  - "marketing_name": "kube-controller-manager"
    "marketing_version": "$(./kubernetes/bin/kube-controller-manager --version)"
  - "marketing_name": "kubectl"
    "marketing_version": "$(./kubernetes/bin/kubectl version --short --client=true)"
  - "marketing_name": "kubelet"
    "marketing_version": "$(./kubernetes/bin/kubelet --version)"
  - "marketing_name": "kube-proxy"
    "marketing_version": "$(./kubernetes/bin/kube-proxy --version)"
  - "marketing_name": "kube-scheduler"
    "marketing_version": "$(./kubernetes/bin/kube-scheduler --version)"
- name: "nfs"
  components:
  - "marketing_name": "keyutils"
    "marketing_version": "$KEYUTILS_VERSION"
  - "marketing_name": "libevent"
    "marketing_version": "$LIBEVENT_VERSION"
  - "marketing_name": "libnfsidmap"
    "marketing_version": "$LIBNFSIDMAP_VERSION"
  - "marketing_name": "nfs-common"
    "marketing_version": "$NFS_COMMON_VERSION"
  - "marketing_name": "rpcbind"
    "marketing_version": "$RPCBIND_VERSION"
- name: "socat"
  components:
  - "marketing_name": "socat"
    "marketing_version": "$SOCAT_VERSION"
EOF
