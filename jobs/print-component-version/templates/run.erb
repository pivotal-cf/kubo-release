#!/bin/bash

set -euo pipefail

cd /var/vcap/jobs/print-component-version/packages

echo "------------------------------------------------------------------"
echo "cifs-utils version:"
pushd cifs-utils > /dev/null
  # TODO: run as sudo
  ./mount.cifs -V
popd > /dev/null
echo ""

echo "------------------------------------------------------------------"
echo "cni versions:"
pushd cni > /dev/null
  ./bin/nsenter -V
  # TODO: cni-plugins
  # export CNI_COMMAND=VERSION
  # export CNI_PATH=`pwd`
  # TODO: other env vars from here: https://github.com/containernetworking/cni/blob/master/SPEC.md
  # TODO: this doesn't work yet
  # ./bin/dhcp
popd > /dev/null
echo ""

echo "------------------------------------------------------------------"
echo "conntrack version:"
pushd conntrack > /dev/null
  dpkg -x libnetfilter*.deb conntrack
  dpkg -x conntrack_*.deb conntrack
  export LD_LIBRARY_PATH=$PWD/conntrack/usr/lib/x86_64-linux-gnu
  ./conntrack/usr/sbin/conntrack -V
  unset LD_LIBRARY_PATH
popd > /dev/null
echo ""

echo "------------------------------------------------------------------"
echo "etcdctl version:"
pushd etcdctl > /dev/null
  ./etcdctl -v
popd > /dev/null
echo ""

echo "------------------------------------------------------------------"
echo "flanneld version:"
pushd flanneld > /dev/null
  # flanneld directs version output to stderr, so redirect it
  # https://github.com/coreos/flannel/blob/master/main.go#L185
  ./flanneld -version 2>&1
popd > /dev/null
echo ""

echo "------------------------------------------------------------------"
echo "golang versions:"
pushd golang-1.12-linux > /dev/null
  ./bin/go version
popd > /dev/null
echo ""

echo "------------------------------------------------------------------"
echo "ipset versions:"
pushd ipset > /dev/null
  dpkg -x ipset_*.deb .
  dpkg -x libipset*.deb .
  export LD_LIBRARY_PATH=$PWD/lib/x86_64-linux-gnu
  ./sbin/ipset --version
  unset LD_LIBRARY_PATH
popd > /dev/null
echo ""

echo "------------------------------------------------------------------"
echo "kubernetes versions:"
pushd kubernetes > /dev/null
  ./bin/kube-apiserver --version
popd > /dev/null
echo ""

echo "------------------------------------------------------------------"
echo "nfs versions:"
pushd nfs > /dev/null
  dpkg -x keyutils_*.deb .
  dpkg -x libevent-*.deb .
  dpkg -x libnfsidmap*.deb .
  dpkg -x nfs-common_*.deb .
  dpkg -x rpcbind_*.deb .
  ./sbin/mount.nfs --version
  # rpcbind doesn't have a built in way to print a version number, so extract from the file name instead
  echo "The rpcbind version extracted just from the '.deb' file name is:"
  dpkg -f rpcbind_0.2.3-0.2_amd64.deb Version
popd > /dev/null
echo ""

echo "------------------------------------------------------------------"
echo "socat versions:"
pushd socat > /dev/null
  # the head command is needed because the version output includes a lot of useless info that OSM does not need
  ./bin/socat -V | head -n 2
popd > /dev/null
echo ""
